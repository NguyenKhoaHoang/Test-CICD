{
  "stats": {
    "suites": 2,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2022-11-16T04:48:16.024Z",
    "end": "2022-11-16T04:48:16.034Z",
    "duration": 10,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "21498e18-9cf6-42e4-a278-bbf48c05ea5b",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "e14ac7c3-97db-4ff9-8fca-12a55ca3953e",
        "title": "Test that the data fetched from OpenWeatherMap is processed correctly",
        "fullFile": "/home/bonvahoang123/Documents/cirleci-nodejs/test/preparing-data-test.js",
        "file": "/test/preparing-data-test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Should check fetched data is processed correctly",
            "fullTitle": "Test that the data fetched from OpenWeatherMap is processed correctly Should check fetched data is processed correctly",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var callback = sinon.stub();\ncallback.withArgs(\"London\").returns(rawWeatherData);\n//TODO",
            "err": {},
            "isRoot": false,
            "uuid": "c09c61c6-e553-4ae3-8e53-a3146475f4d2",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "c09c61c6-e553-4ae3-8e53-a3146475f4d2"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "d8fe5e4b-eb47-4f55-b633-5ab9df6581c2",
        "title": "Test the weather kit module's basic functionality",
        "fullFile": "/home/bonvahoang123/Documents/cirleci-nodejs/test/weather-kit-test.js",
        "file": "/test/weather-kit-test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return true for umbrella test if it is raining",
            "fullTitle": "Test the weather kit module's basic functionality should return true for umbrella test if it is raining",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(helloWeather.doINeed.umbrella(monday)).to.be.a('boolean');\nexpect(helloWeather.doINeed.umbrella(tuesday)).equal(false);\nexpect(helloWeather.doINeed.umbrella(wednesday)).equal(false);\nexpect(helloWeather.doINeed.umbrella(friday)).equal(true);",
            "err": {},
            "isRoot": false,
            "uuid": "c1dbc660-977e-42f1-b1e7-c5ea4a5fbbc6",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return true if suncream is required",
            "fullTitle": "Test the weather kit module's basic functionality should return true if suncream is required",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "helloWeather.doINeed.suncream(monday).should.be.a('boolean');\nhelloWeather.doINeed.suncream(monday).should.equal(false);\nhelloWeather.doINeed.suncream(tuesday).should.equal(false);\nhelloWeather.doINeed.suncream(wednesday).should.equal(true);",
            "err": {},
            "isRoot": false,
            "uuid": "c50b80d1-1e76-4465-b658-063bc40e1056",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return true if jumper is required",
            "fullTitle": "Test the weather kit module's basic functionality should return true if jumper is required",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "assert.typeOf(helloWeather.doINeed.jumper(monday), 'boolean');\nassert.typeOf(helloWeather.doINeed.jumper(tuesday), 'boolean', 'boolean returned');\nassert.equal(\n    helloWeather.doINeed.jumper(wednesday),\n    false,\n    'should return false, because it is very warm on wednesday'\n);\nassert.equal(helloWeather.doINeed.jumper(thuresday), true)",
            "err": {},
            "isRoot": false,
            "uuid": "2c359b66-b790-4d5f-9399-e1be04c20fa3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should always return true as water is always required",
            "fullTitle": "Test the weather kit module's basic functionality should always return true as water is always required",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(helloWeather.doINeed.water(monday)).equal(true);",
            "err": {},
            "isRoot": false,
            "uuid": "1d3f5e5e-b7be-4e98-bfff-791946c50d8d",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "c1dbc660-977e-42f1-b1e7-c5ea4a5fbbc6",
          "c50b80d1-1e76-4465-b658-063bc40e1056",
          "2c359b66-b790-4d5f-9399-e1be04c20fa3",
          "1d3f5e5e-b7be-4e98-bfff-791946c50d8d"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 2,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2022
}